# In this file we'll create some visualizations that are more easily produced in R than Python
# Loading libraries
library(ggplot2)
library(ggpmisc)
library(formattable)
library(dplyr)
# setting working directory
setwd('C:/Users/nirgo/Documents/GitHub/Fantasy/Data')
# Loading data. SGW - Single Game Week (i.e, not cumulative). CUM - cumulative data until GW 19.
sgw_data <- read.csv('Final Data.csv')
cum_data <- read.csv('./Cumulative Merged Data/CMD_S21_GW_24.csv')
# Changing encoding for R doesn't catch well some of the latin players' names
Encoding(cum_data$Player) <- 'UTF-8'
Encoding(sgw_data$Player) <- 'UTF-8'
# Drop duplicates
sgw_data <- sgw_data %>% distinct()
cum_data <- cum_data %>% distinct()
# Transform Sel. column to numeric
cum_data$Sel. <- unlist(lapply(cum_data$Sel., function(x) sub('%', '', x) %>% as.numeric()))
# Change role factors for legend visualizations
cum_data$Role <- factor(cum_data$Role, levels = c('GKP',
'DEF',
'MID',
'FWD'))
# Compute Cost-Pts. linear model residuals
cost_pts_reg <- lm(Pts. ~ Cost, data = cum_data)
cum_data$cp_resid <- cost_pts_reg$residuals
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, colour = Role)) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
# scale_x_continuous(name = 'Cost', limits = c(4,12.5), breaks = seq(4, 13, 2)) +
# scale_y_continuous(limits = c(20,150), breaks = seq(20, 150, 20)) +
# guides(size = F)
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, size = 3, colour = Role)) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
# scale_x_continuous(name = 'Cost', limits = c(4,12.5), breaks = seq(4, 13, 2)) +
# scale_y_continuous(limits = c(20,150), breaks = seq(20, 150, 20)) +
# guides(size = F)
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, size = 2, colour = Role)) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
# scale_x_continuous(name = 'Cost', limits = c(4,12.5), breaks = seq(4, 13, 2)) +
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, size = 1, colour = Role)) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
# scale_x_continuous(name = 'Cost', limits = c(4,12.5), breaks = seq(4, 13, 2)) +
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, colour = Role), size = 1) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# Plot value against selected
ggplot(data = cum_data, aes(x = cp_resid, y = Sel.)) +
geom_text(data = cum_data[cum_data$Pts. > 25,], aes(label = Player, colour = Role), size = 3) +
geom_smooth() +
facet_wrap(~ Role, scales = 'free')
# stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
