geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, method = 'lm',colour="dark green", se = FALSE) +
stat_poly_eq(data =  data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, rr.digits = 2, colour='dark green', parse = T, label.x.npc = 'right') +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, method = 'lm',colour="orange", se = FALSE) +
stat_poly_eq(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, rr.digits = 2, colour='orange', parse = T, label.x.npc = 'right', label.y.npc = 0.9) +
geom_text(data = data %>% filter(above_avg_death==1 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'dark green', size = 2) +
geom_text(data = data %>% filter(above_avg_death==0 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'orange', size = 2) +
geom_text(data = data %>% filter(country_code == "ISR"), aes(label=country_code), colour = 'blue', size = 3) +
geom_text(data = data %>% filter(country_code == "OECD"), aes(label=country_code), colour = 'red', size = 3) +
theme(axis.text=element_text(),axis.title=element_text(face="bold"))
ggsave(filename = paste0(pair[1],"_",pair[2],'.png'),path = path,width=6,height=5,units="in")
}
lapply(pairs,plot_corr)
plot_corr <- function(pair){
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 2)))
as.character(as.expression(eq));
}
formula <- y ~ x
exclud1 <- ifelse(pair[1]=="debt_gdp","Japan",
ifelse(pair[1]=="credit_rating","Greece",""))
exclud2 <- ifelse(pair[1]=="debt_gdp","Greece",
ifelse(pair[1]=="credit_rating","Turkey",""))
ggplot(data = data,aes_string(x=pair[1],y=pair[2])) +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, method = 'lm',colour="dark green", se = FALSE) +
stat_poly_eq(data =  data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, colour='dark green', parse = T, label.x.npc = 'right') +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, method = 'lm',colour="orange", se = FALSE) +
stat_poly_eq(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, colour='orange', parse = T, label.x.npc = 'right', label.y.npc = 0.9) +
geom_text(data = data %>% filter(above_avg_death==1 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'dark green', size = 2) +
geom_text(data = data %>% filter(above_avg_death==0 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'orange', size = 2) +
geom_text(data = data %>% filter(country_code == "ISR"), aes(label=country_code), colour = 'blue', size = 3) +
geom_text(data = data %>% filter(country_code == "OECD"), aes(label=country_code), colour = 'red', size = 3) +
theme(axis.text=element_text(),axis.title=element_text(face="bold"))
ggsave(filename = paste0(pair[1],"_",pair[2],'.png'),path = path,width=6,height=5,units="in")
}
lapply(pairs,plot_corr)
plot_corr <- function(pair){
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 2)))
as.character(as.expression(eq));
}
formula <- y ~ x
exclud1 <- ifelse(pair[1]=="debt_gdp","Japan",
ifelse(pair[1]=="credit_rating","Greece",""))
exclud2 <- ifelse(pair[1]=="debt_gdp","Greece",
ifelse(pair[1]=="credit_rating","Turkey",""))
ggplot(data = data,aes_string(x=pair[1],y=pair[2])) +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, method = 'lm',colour="dark green", se = FALSE) +
stat_poly_eq(data =  data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, colour='dark green', parse = T, label.x.npc = 'right') +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, method = 'lm',colour="orange", se = FALSE) +
stat_poly_eq(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, colour='orange', parse = T, label.x.npc = 'right', label.y.npc = 0.9) +
geom_text(data = data %>% filter(above_avg_death==1 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'dark green', size = 5) +
geom_text(data = data %>% filter(above_avg_death==0 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'orange', size = 5) +
geom_text(data = data %>% filter(country_code == "ISR"), aes(label=country_code), colour = 'blue', size = 6) +
geom_text(data = data %>% filter(country_code == "OECD"), aes(label=country_code), colour = 'red', size = 6) +
theme(axis.text=element_text(),axis.title=element_text(face="bold"))
ggsave(filename = paste0(pair[1],"_",pair[2],'.png'),path = path,width=6,height=5,units="in")
}
lapply(pairs,plot_corr)
plot_corr <- function(pair){
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 2)))
as.character(as.expression(eq));
}
formula <- y ~ x
exclud1 <- ifelse(pair[1]=="debt_gdp","Japan",
ifelse(pair[1]=="credit_rating","Greece",""))
exclud2 <- ifelse(pair[1]=="debt_gdp","Greece",
ifelse(pair[1]=="credit_rating","Turkey",""))
ggplot(data = data,aes_string(x=pair[1],y=pair[2])) +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, method = 'lm',colour="dark green", se = FALSE) +
stat_poly_eq(data =  data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==1), formula = formula, colour='dark green', parse = T, label.x.npc = 'right') +
geom_smooth(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, method = 'lm',colour="orange", se = FALSE) +
stat_poly_eq(data = data%>%filter(!country_name %in% c(exclud1,exclud2) & above_avg_death==0), formula = formula, colour='orange', parse = T, label.x.npc = 'right', label.y.npc = 0.9) +
geom_text(data = data %>% filter(above_avg_death==1 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'dark green', size = 4) +
geom_text(data = data %>% filter(above_avg_death==0 & !country_code %in% c("ISR","OECD")), aes(label=country_code), colour = 'orange', size = 4) +
geom_text(data = data %>% filter(country_code == "ISR"), aes(label=country_code), colour = 'blue', size = 5) +
geom_text(data = data %>% filter(country_code == "OECD"), aes(label=country_code), colour = 'red', size = 5) +
theme(axis.text=element_text(),axis.title=element_text(face="bold"))
ggsave(filename = paste0(pair[1],"_",pair[2],'.png'),path = path,width=6,height=5,units="in")
}
lapply(pairs,plot_corr)
library(ggplot2)
library(ggpmisc)
sgw_data <- read.csv('Final Data.csv')
getwd()
setwd('C:/Users/nirgo/Documents/GitHub/Fantasy')
sgw_data <- read.csv('Final Data.csv')
View(sgw_data)
View(data)
ggplot(data = sgw_data, aes(x = Player_xG, y = Goals.scored)) +
geom_point() +
stat_poly_eq(formula = y ~ x, parse = T)
cum_data <- read.csv('Data/Cumulative_Merged_Data/CMD_S21_GW_19.csv')
cum_data <- read.csv('/Data/Cumulative_Merged_Data/CMD_S21_GW_19.csv')
cum_data <- read.csv('Cumulative_Merged_Data/CMD_S21_GW_19.csv')
cum_data <- read.csv('/Cumulative_Merged_Data/CMD_S21_GW_19.csv')
cum_data <- read.csv('./Cumulative_Merged_Data/CMD_S21_GW_19.csv')
cum_data <- read.csv('./Cumulative Merged Data/CMD_S21_GW_19.csv')
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_point() +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_point() +
geom_smooth() +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_point() +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
View(cum_data)
ggplot(data = sgw_data, aes(x = Player_xG, y = Goals.scored), colour = Form) +
geom_point() +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = sgw_data, aes(x = Player_xG, y = Goals.scored), color = Form) +
geom_point() +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = sgw_data, aes(x = Player_xG, y = Goals.scored, color = Form)) +
geom_point() +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Form)) +
geom_point() +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Form)) +
geom_point() +
scale_color_gradient(low = 'yellow', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Form)) +
geom_point() +
scale_color_gradient(low = 'orange', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = sgw_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point() +
scale_color_gradient(low = 'orange', high = 'red') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point() +
scale_color_gradient(low = 'orange', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 4) +
scale_color_gradient(low = 'orange', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 3) +
scale_color_gradient(low = 'orange', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 2) +
scale_color_gradient(low = 'orange', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 2) +
scale_color_gradient(low = 'dark yellow', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 2) +
scale_color_gradient(low = 'yellow4', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 2) +
scale_color_gradient(low = 'yellow3', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored, color = Cost)) +
geom_point(size = 2) +
scale_color_gradient(low = 'yellow2', high = 'red') +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player), size = 1) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player), size = 3) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player), size = Goals.scored) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
scale_size(range = c(2,5))
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
scale_size(range = c(1,4))
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = NULL)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, , size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none')
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, , size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none')
Encoding(cum_data) <- 'UTF-8'
Encoding(cum_data$Player) <- 'UTF-8'
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none')
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none')
# Cumulaive - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none',
axis.title.x = 'xG',
axis.title.y = 'Goals',
axis.ticks.x = c(0,10))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none',
axis.title.x = 'xG',
axis.title.y = 'Goals')
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none',
axis.title.x = element_text('xG'),
axis.title.y = element_text('Goals'))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none')
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored', size = 5) +
theme(legend.position = 'none')
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored', size = 20) +
theme(legend.position = 'none')
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,13), breaks = seq(0, 13, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,13), breaks = seq(0, 12, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12), breaks = seq(0, 12, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.1), breaks = seq(0, 12, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 12, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 1))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
labs(x = 'xG',
y = 'Goals Scored') +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Goals Scored', limits = c(0,15), breaks = seq(0, 15, 2))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Goals Scored', limits = c(0,13), breaks = seq(0, 13, 2))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Goals Scored', limits = c(0,13), breaks = seq(0, 13, 2))
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,13), breaks = seq(0, 13, 2))
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,8), breaks = seq(0, 8, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,12), breaks = seq(0, 12, 2))
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,8), breaks = seq(0, 8, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,11), breaks = seq(0, 11, 2))
# Cumulative - xG vs. Goals scored
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Goals Scored', limits = c(0,13), breaks = seq(0, 13, 2))
# Export plot
ggsave(path = './Visualizations/xG_Goals.png',
width = 600,
height = 335)
ggsave(filename = 'xG_Goals.png',
path = './Visualizations',
width = 600,
height = 335)
# Export plot
ggsave(filename = 'xG_Goals.png',
path = './Visualizations',
width = 8,
height = 4.46666)
# Export plot
ggsave(filename = 'xA_Assists.png',
path = './Visualizations',
width = 8,
height = 4.46666)
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,8), breaks = seq(0, 8, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,11), breaks = seq(0, 11, 2))
# Export plot
ggsave(filename = 'xA_Assists.png',
path = './Visualizations',
width = 8,
height = 4.46666)
ggplot(data = cum_data, aes(x = Player_xG, y = Goals.scored)) +
geom_text(data = cum_data, aes(label = Player, size = Goals.scored)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xG', limits = c(0,12.5), breaks = seq(0, 13, 2)) +
scale_y_continuous(name = 'Goals Scored', limits = c(0,13), breaks = seq(0, 13, 2))
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Player_xA)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,8), breaks = seq(0, 8, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,11), breaks = seq(0, 11, 2))
# Export plot
ggsave(filename = 'xA_Assists.png',
path = './Visualizations',
width = 8,
height = 4.46666)
# Cumulative - xA vs. Assists
ggplot(data = cum_data, aes(x = Player_xA, y = Assists)) +
geom_text(data = cum_data, aes(label = Player, size = Assists)) +
scale_size(range = c(1,4)) +
geom_smooth(method = 'lm') +
stat_poly_eq(formula = y ~ x, parse = T, size = 5) +
theme(legend.position = 'none') +
scale_x_continuous(name = 'xA', limits = c(0,8), breaks = seq(0, 8, 2)) +
scale_y_continuous(name = 'Assists', limits = c(0,11), breaks = seq(0, 11, 2))
# Export plot
ggsave(filename = 'xA_Assists.png',
path = './Visualizations',
width = 8,
height = 4.46666)
